<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="4"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<rfc category="std" docName="draft-ietf-core-hop-limit-06" ipr="trust200902">
  <front>
    <title abbrev="CoAP Hop Limit Option">Constrained Application Protocol
    (CoAP) Hop-Limit Option</title>

    <author fullname="Mohamed Boucadair" initials="M." surname="Boucadair">
      <organization>Orange</organization>

      <address>
        <postal>
          <street></street>

          <city>Rennes</city>

          <region></region>

          <code>35000</code>

          <country>France</country>
        </postal>

        <email>mohamed.boucadair@orange.com</email>
      </address>
    </author>

    <author fullname="Tirumaleswar Reddy" initials="T." surname="Reddy">
      <organization abbrev="McAfee">McAfee, Inc.</organization>

      <address>
        <postal>
          <street>Embassy Golf Link Business Park</street>

          <city>Bangalore</city>

          <region>Karnataka</region>

          <code>560071</code>

          <country>India</country>
        </postal>

        <email>kondtir@gmail.com</email>
      </address>
    </author>

    <author fullname="Jon Shallow" initials="J." surname="Shallow">
      <organization></organization>

      <address>
        <postal>
          <street></street>

          <city></city>

          <region></region>

          <code></code>

          <country>United Kingdom</country>
        </postal>

        <email>supjps-ietf@jpshallow.com</email>
      </address>
    </author>

    <date />

    <workgroup>CORE</workgroup>

    <keyword>security</keyword>

    <keyword>mitigation</keyword>

    <keyword>service delivery</keyword>

    <keyword>connectivity</keyword>

    <keyword>anti-DDoS</keyword>

    <keyword>automation</keyword>

    <keyword>cooperation</keyword>

    <keyword>Resilience</keyword>

    <keyword>Filtering</keyword>

    <keyword>Security Center</keyword>

    <keyword>Mitigator</keyword>

    <keyword>Scrubbing</keyword>

    <keyword>dynamic service protection</keyword>

    <keyword>dynamic mitigation</keyword>

    <abstract>
      <t>The presence of Constrained Application Protocol (CoAP) proxies may
      lead to infinite forwarding loops, which is undesirable. To prevent and
      detect such loops, this document specifies the Hop-Limit CoAP
      option.</t>
    </abstract>
  </front>

  <middle>
    <section anchor="introduction" title="Introduction">
      <t>More and more applications are using the Constrained Application
      Protocol (CoAP) <xref target="RFC7252"></xref> as a communication
      protocol between involved application agents. For example, <xref
      target="I-D.ietf-dots-signal-channel"></xref> specifies how CoAP is used
      as a signaling protocol between domains under distributed
      denial-of-service (DDoS) attacks and DDoS mitigation providers. In such
      contexts, a CoAP client can communicate directly with a server or
      indirectly via proxies.</t>

      <t>When multiple proxies are involved, infinite forwarding loops may be
      experienced (e.g., routing misconfiguration, policy conflicts). To
      prevent such loops, this document defines a new CoAP option, called
      Hop-Limit (<xref target="spec"></xref>). Also, the document defines a
      new CoAP Response Code (<xref target="code"></xref>) to report loops
      together with relevant diagnostic information to ease troubleshooting
      (<xref target="debug"></xref>).</t>

      <section title="Intended Usage">
        <t>The Hop-Limit option has originally been designed for a specific
        use case <xref target="I-D.ietf-dots-signal-channel"></xref>. However,
        its intended usage is general: CoAP proxies that do not have specific
        knowledge that proxy forwarding loops are avoided in some other way,
        are expected to implement this option and have it enabled by
        default.</t>

        <t>Note that this means that a server that receives requests both via
        proxies and directly from clients may see otherwise identical requests
        with and without the Hop-Limit option included; servers with internal
        caching will therefore also want to implement this option.</t>
      </section>
    </section>

    <section anchor="notation" title="Terminology">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
      "OPTIONAL" in this document are to be interpreted as described in BCP 14
      <xref target="RFC2119"></xref><xref target="RFC8174"></xref> when, and
      only when, they appear in all capitals, as shown here.</t>

      <t>Readers should be familiar with the terms and concepts defined in
      <xref target="RFC7252"></xref>.</t>
    </section>

    <section anchor="spec" title="Hop-Limit Option">
      <t>The Hop-Limit option (Table 1) is an elective option used to detect
      and prevent infinite loops when proxies are involved. The option is not
      repeatable. Therefore, any message carrying multiple Hop-Limit options
      MUST be handled following the procedure specified in Section 5.4.5 of
      <xref target="RFC7252"></xref>.<figure align="center">
          <artwork align="center"><![CDATA[+--------+---+---+---+---+-----------+--------+--------+---------+
| Number | C | U | N | R | Name      | Format | Length | Default |
+--------+---+---+---+---+-----------+--------+--------+---------+
|  TBA2  |   |   |   |   | Hop-Limit |  uint  |   1    |    16   |
+--------+---+---+---+---+-----------+--------+--------+---------+
    C=Critical, U=Unsafe, N=NoCacheKey, R=Repeatable

                  Table 1: CoAP Option Properties]]></artwork>
        </figure></t>

      <t>The value of the Hop-Limit option is encoded as an unsigned integer
      (see Section 3.2 of <xref target="RFC7252"></xref>). This value MUST be
      between 1 and 255 inclusive. CoAP messages received with a Hop-Limit
      option set to '0' or greater than '255' MUST be rejected by a CoAP
      server/proxy using 4.00 (Bad Request).</t>

      <t>The Hop-Limit option is safe to forward. That is, a CoAP proxy which
      does not understand the Hop-Limit option should forward it on. The
      option is also part of the cache key. As such, a CoAP proxy which does
      not understand the Hop-Limit option must follow the recommendations in
      Section 5.7.1 of <xref target="RFC7252"></xref> for caching. Note that
      loops which involve only such proxies will not be detected.
      Nevertheless, the presence of such proxies will not prevent infinite
      loop detection if at least one CoAP proxy which support the Hop-Limit
      option is involved in the loop.</t>

      <t>A CoAP proxy which understands the Hop-Limit option MAY be
      instructed, using a configuration parameter, to insert a Hop-Limit
      option when relaying a request which do not include the Hop-Limit
      option.</t>

      <t>The initial Hop-Limit value should be configurable. If no initial
      value is explicitly provided, the default initial Hop-Limit value of 16
      MUST be used. This value is chosen to be sufficiently large to guarantee
      that a CoAP request would not be dropped in networks when there were no
      loops, but not so large as to consume CoAP proxy resources when a loop
      does occur. Lower values should be used with caution and only in
      networks where topologies are known by the CoAP client (or proxy)
      inserting the Hop-Limit option.</t>

      <t>Because forwarding errors may occur if inadequate Hop-Limit values
      are used, proxies at the boundaries of an administrative domain MAY be
      instructed to remove or rewrite the value of Hop-Limit carried in
      received messages (i.e., ignore the value of Hop-Limit received in a
      message). This modification should be done with caution in case
      proxy-forwarded traffic repeatedly crosses the administrative domain
      boundary in a loop and so Hop-Limit detection gets broken.</t>

      <t>Otherwise, a CoAP proxy which understands the Hop-Limit option MUST
      decrement the value of the option by 1 prior to forwarding it. A CoAP
      proxy which understands the Hop-Limit option MUST NOT use a stored TBA1
      (Hop Limit Reached) error response unless the value of the Hop-Limit
      option in the presented request is less than or equal to the value of
      the Hop-Limit option in the request used to obtain the stored response.
      Otherwise, the CoAP proxy follows the behavior in Section 5.6 of <xref
      target="RFC7252"></xref>.<list style="empty">
          <t>Note: If a request with a given value of Hop-Limit failed to
          reach a server because the hop limit is exhausted, then the same
          failure will be observed if a less value of the Hop-Limit option is
          used instead.</t>
        </list></t>

      <t>CoAP messages MUST NOT be forwarded if the Hop-Limit option is set to
      '0' after decrement. Messages that cannot be forwarded because of
      exhausted Hop-Limit SHOULD be logged with a TBA1 (Hop Limit Reached)
      error response sent back to the CoAP peer. It is RECOMMENDED that CoAP
      implementations support means to alert administrators about loop errors
      so that appropriate actions are undertaken.</t>
    </section>

    <section anchor="debug" title="Debugging &amp; Troubleshooting">
      <t>To ease debugging and troubleshooting, the CoAP proxy which detects a
      loop includes its information in the diagnostic payload under the
      conditions detailed in Section 5.5.2 of <xref target="RFC7252"></xref>.
      That information MUST NOT include any space character. The information
      inserted by a CoAP proxy can be, for example, a proxy name (e.g.,
      p11.example.net), proxy alias (e.g., myproxyalias), or IP address (e.g.,
      2001:db8::1).</t>

      <t>Each intermediate proxy involved in relaying a TBA1 (Hop Limit
      Reached) error message prepends its own information in the diagnostic
      payload with a space character used as separator. Only one information
      per proxy should appear in the diagnostic payload. Doing so allows to
      limit the size of the TBA1 (Hop Limit Reached) error message, and to
      ease correlation with hops count. Note that an intermediate proxy
      prepends its information only if there is enough space as determined by
      the Path MTU (Section 4.6 of <xref target="RFC7252"></xref>). If not, an
      intermediate proxy forwards the TBA1 (Hop Limit Reached) error message
      to the next hop without updating the diagnostic payload.</t>
    </section>

    <section title="HTTP-Mapping Considerations">
      <t>This section focuses on the HTTP mappings specific to the CoAP
      extension specified in this document. As a reminder, the basic normative
      requirements on HTTP/CoAP mappings are defined in Section 10 of <xref
      target="RFC7252"></xref>. The implementation guidelines for HTTP/CoAP
      mappings are elaborated in <xref target="RFC8075"></xref>.</t>

      <t>By default, the HTTP-to-CoAP Proxy inserts a Hop-Limit option
      following the guidelines in <xref target="spec"></xref>. The
      HTTP-to-CoAP Proxy MAY be instructed by policy to insert a Hop-Limit
      option only if a Via (Section 5.7.1 of <xref target="RFC7230"></xref>)
      or CDN-Loop header field <xref target="RFC8586"></xref> is present in
      the HTTP request.</t>

      <t>The HTTP-to-CoAP Proxy uses 508 (Loop Detected) as the HTTP response
      status code to map TBA1 (Hop Limit Reached). Furthermore, it maps the
      diagnostic payload of TBA1 (Hop Limit Reached) as per Section 6.6 of
      <xref target="RFC8075"></xref>.</t>

      <t>By default, the CoAP-to-HTTP Proxy inserts a Via header field in the
      HTTP request if the CoAP request includes a Hop-Limit option. The
      CoAP-to-HTTP Proxy MAY be instructed by policy to insert a CDN-Loop
      header field instead of the Via header field.</t>

      <t>The CoAP-to-HTTP Proxy maps the 508 (Loop Detected) HTTP response
      status code to TBA1 (Hop Limit Reached). Moreover, the CoAP-to-HTTP
      Proxy inserts its information following the guidelines in <xref
      target="debug"></xref>.</t>

      <t>When both HTTP-to-CoAP and CoAP-to-HTTP proxies are involved, the
      loop detection may get broken if the proxy-forwarded traffic repeatedly
      crosses the HTTP-to-CoAP and CoAP-to-HTTP proxies. Nevertheless, if the
      loop is within the CoAP or HTTP legs, the loop detection is still
      functional.</t>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t><list style="empty">
          <t>Editorial Note: Please update TBA1/TBA2 statements within the
          document with the assigned codes.</t>
        </list></t>

      <section anchor="code" title="CoAP Response Code">
        <t>IANA is requested to add the following entry to the "CoAP Response
        Codes" sub-registry available at
        https://www.iana.org/assignments/core-parameters/core-parameters.xhtml#response-codes:</t>

        <t><figure align="center">
            <artwork align="center"><![CDATA[+------+------------------+-----------+
| Code | Description      | Reference |
+------+------------------+-----------+
| TBA1 | Hop Limit Reached| [RFCXXXX] |
+------+------------------+-----------+

      Table 2: CoAP Response Codes]]></artwork>
          </figure></t>

        <t>This document suggests 5.08 as a code to be assigned for the new
        response code. </t>
      </section>

      <section anchor="option" title="CoAP Option Number">
        <t>IANA is requested to add the following entry to the "CoAP Option
        Numbers" sub-registry available at
        https://www.iana.org/assignments/core-parameters/core-parameters.xhtml#option-numbers:</t>

        <t><figure align="center">
            <artwork align="center"><![CDATA[+--------+------------------+-----------+
| Number | Name             | Reference |
+--------+------------------+-----------+
|  TBA2  | Hop-Limit        | [RFCXXXX] |
+--------+------------------+-----------+

     Table 3: CoAP Option Number]]></artwork>
          </figure></t>

        <t>This document suggests 16 as a value to be assigned for the new
        option number. </t>
      </section>
    </section>

    <section anchor="security" title="Security Considerations">
      <t>Security considerations related to CoAP proxying are discussed in
      Section 11.2 of <xref target="RFC7252"></xref>.</t>

      <t>The diagnostic payload of a TBA1 (Hop Limit Reached) error message
      may leak sensitive information revealing the topology of an
      administrative domain. To prevent that, a CoAP proxy which is located at
      the boundary of an administrative domain MAY be instructed to strip the
      diagnostic payload or part of it before forwarding on the TBA1 (Hop
      Limit Reached) response.</t>
    </section>

    <section anchor="ack" title="Acknowledgements">
      <t>This specification was part of <xref
      target="I-D.ietf-dots-signal-channel"></xref>. Many thanks to those who
      reviewed DOTS specifications.</t>

      <t>Thanks to Klaus Hartke, Carsten Bormann, Peter van der Stok, Jim
      Schaad, Jaime Jim&eacute;nez, and Roni Even for the reviews.</t>

      <t>Carsten Bormann provided the "Intended Usage" text.</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="reference.RFC.2119"?>

      <?rfc include="reference.RFC.7252"?>

      <?rfc include='reference.RFC.8174'?>

      <?rfc include='reference.RFC.7230'?>

      <?rfc include='reference.RFC.8075'?>
    </references>

    <references title="Informative References">
      <?rfc include="reference.I-D.ietf-dots-signal-channel"?>

      <?rfc include='reference.RFC.8586'?>
    </references>
  </back>
</rfc>
